{"version":3,"file":"sleet.min.js","sources":["../src/parser/syntax.js","../src/ast.ts","../src/parser/index.ts","../src/context.ts","../src/sleet.ts"],"sourcesContent":["/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n\n\"use strict\";\n\nfunction peg$subclass(child, parent) {\n  function ctor() { this.constructor = child; }\n  ctor.prototype = parent.prototype;\n  child.prototype = new ctor();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message  = message;\n  this.expected = expected;\n  this.found    = found;\n  this.location = location;\n  this.name     = \"SyntaxError\";\n\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found) {\n  var DESCRIBE_EXPECTATION_FNS = {\n        literal: function(expectation) {\n          return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n        },\n\n        \"class\": function(expectation) {\n          var escapedParts = \"\",\n              i;\n\n          for (i = 0; i < expectation.parts.length; i++) {\n            escapedParts += expectation.parts[i] instanceof Array\n              ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n              : classEscape(expectation.parts[i]);\n          }\n\n          return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n        },\n\n        any: function(expectation) {\n          return \"any character\";\n        },\n\n        end: function(expectation) {\n          return \"end of input\";\n        },\n\n        other: function(expectation) {\n          return expectation.description;\n        }\n      };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\"/g,  '\\\\\"')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\]/g, '\\\\]')\n      .replace(/\\^/g, '\\\\^')\n      .replace(/-/g,  '\\\\-')\n      .replace(/\\0/g, '\\\\0')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = new Array(expected.length),\n        i, j;\n\n    for (i = 0; i < expected.length; i++) {\n      descriptions[i] = describeExpectation(expected[i]);\n    }\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== void 0 ? options : {};\n\n  var peg$FAILED = {},\n\n      peg$startRuleFunctions = { start: peg$parsestart },\n      peg$startRuleFunction  = peg$parsestart,\n\n      peg$c0 = function(declare, nodes) {\n              return {nodes: flatSibling(nodes || []), indent: IDT_TOK || '', declaration: declare}\n          },\n      peg$c1 = \"#!\",\n      peg$c2 = peg$literalExpectation(\"#!\", false),\n      peg$c3 = \"=\",\n      peg$c4 = peg$literalExpectation(\"=\", false),\n      peg$c5 = function(name, i) {return i},\n      peg$c6 = function(name, ext, kv) {return kv},\n      peg$c7 = function(name, ext, attr) {\n\n              return new ast.Declaration(name, ext, attr, location())\n          },\n      peg$c8 = peg$anyExpectation(),\n      peg$c9 = function(key, value) {\n              return {key: key, value: value}\n          },\n      peg$c10 = function(start, node) { return node },\n      peg$c11 = function(start, rest) {\n              return rest.unshift(start) && rest\n          },\n      peg$c12 = function(p, c) {\n              let cc = c.filter(it => it !== p.sibling)\n              if (!p.sibling) cc = flatSibling(cc)\n              p._setChildren(cc)\n              parents.pop()\n              return p\n          },\n      peg$c13 = function(tag) {\n              return parents.push(tag) && tag\n          },\n      peg$c14 = function(indent) {\n              return indent === parent().indent + 1 ? true : false\n          },\n      peg$c15 = function(indent, node) {\n              return node\n          },\n      peg$c16 = /^[:>]/,\n      peg$c17 = peg$classExpectation([\":\", \">\"], false, false),\n      peg$c18 = function(node) {\n              node._indent ++\n              return node\n          },\n      peg$c19 = \"+\",\n      peg$c20 = peg$literalExpectation(\"+\", false),\n      peg$c21 = function(node) {\n              parent().sibling = node\n              node._indent ++\n              return node\n          },\n      peg$c22 = function(text) {\n              const p = parent()\n              if (p.name === '|') {\n                  p._setText(text)\n                  return p\n              }\n\n              const tag = new ast.Tag(IDT, '|', text.length === 1 ? 'inline' : null, [], null, [], null, location())\n              tag._setText(text)\n              return tag\n          },\n      peg$c23 = function() {\n              IDT = 0\n          },\n      peg$c24 = function(indent) {\n              return IDT = indent || 0\n          },\n      peg$c25 = function(ns, name, clazz, id, clazz2) {\n              return name || clazz.length > 0 || id || clazz2.length > 0\n          },\n      peg$c26 = function(ns, name, clazz, id, clazz2, attrs, extra) {\n              return new ast.Tag(IDT, name, ns, clazz.concat(clazz2), id, attrs, extra, location())\n          },\n      peg$c27 = \"|\",\n      peg$c28 = peg$literalExpectation(\"|\", false),\n      peg$c29 = function(ns, attrs) {\n              return new ast.Tag(IDT, '|', ns, [], null, attrs, null, location())\n          },\n      peg$c30 = \"#\",\n      peg$c31 = peg$literalExpectation(\"#\", false),\n      peg$c32 = function() {\n              return new ast.Tag(IDT, '#', null, [], null, [], null, location())\n          },\n      peg$c33 = \":\",\n      peg$c34 = peg$literalExpectation(\":\", false),\n      peg$c35 = function(name) {\n              return name\n          },\n      peg$c36 = \".\",\n      peg$c37 = peg$literalExpectation(\".\", false),\n      peg$c38 = \"@\",\n      peg$c39 = peg$literalExpectation(\"@\", false),\n      peg$c40 = function(name, values) {\n              return new ast.TagExtra(name, values, location())\n          },\n      peg$c41 = \"(\",\n      peg$c42 = peg$literalExpectation(\"(\", false),\n      peg$c43 = function(first, v) { return v },\n      peg$c44 = \")\",\n      peg$c45 = peg$literalExpectation(\")\", false),\n      peg$c46 = function(first, rest) {\n              return rest.unshift(first) && rest\n          },\n      peg$c47 = \"..\",\n      peg$c48 = peg$literalExpectation(\"..\", false),\n      peg$c49 = function() { textIndent = 0; return true},\n      peg$c50 = function(text) { return text },\n      peg$c51 = function() { textIndent = 1; return true},\n      peg$c52 = /^[:>+]/,\n      peg$c53 = peg$classExpectation([\":\", \">\", \"+\"], false, false),\n      peg$c54 = function(text) { return [text] },\n      peg$c55 = function(first, l) { return l },\n      peg$c56 = function(first, rest) {\n              rest.unshift(first)\n              return rest\n          },\n      peg$c57 = peg$otherExpectation(\"Tag text line\"),\n      peg$c58 = function(indent) {\n              if (!indent.length) return IDT === 0 && textIndent === 0\n              if (IDT_TOK === null) {\n                  IDT_TOK = indent.indexOf('\\t') < 0 ? indent : '\\t'\n              }\n              return indent.length >= (IDT + textIndent) * IDT_TOK.length\n          },\n      peg$c59 = function(indent, text) {\n              const sp = indent.slice((IDT + textIndent) * (IDT_TOK || '').length)\n              text.unshift(new ast.StaticText(sp, location()))\n              return text\n          },\n      peg$c60 = function(w) {return w},\n      peg$c61 = function(ws) {\n              const sp = ws.slice((IDT + textIndent) * (IDT_TOK || '').length)\n              return [new ast.StaticText(sp, location())]\n          },\n      peg$c62 = peg$otherExpectation(\"Text to end of line\"),\n      peg$c63 = \"\\\\$\",\n      peg$c64 = peg$literalExpectation(\"\\\\$\", false),\n      peg$c65 = function(c) { return '$' + c },\n      peg$c66 = \"\\\\\",\n      peg$c67 = peg$literalExpectation(\"\\\\\", false),\n      peg$c68 = function(c) { return text() },\n      peg$c69 = function(t) {\n              return new ast.StaticText(t, location())\n          },\n      peg$c70 = \"$\",\n      peg$c71 = peg$literalExpectation(\"$\", false),\n      peg$c72 = function(name) {\n              return new ast.DynamicText(name, location())\n              return {type: 'dynamic', name}\n          },\n      peg$c73 = function(name) {\n              if (!name) new ast.StaticText('$', location())\n              return new ast.DynamicText(name, location())\n          },\n      peg$c74 = function(start, group) { return group },\n      peg$c75 = function(attrs, settings) {\n              return new ast.AttributeGroup(attrs, settings, location())\n          },\n      peg$c76 = function(attrs, indent) {\n              return (indent || '').length === IDT * IDT_TOK.length\n          },\n      peg$c77 = function(attrs, indent, settings) {\n              return new ast.AttributeGroup(attrs, settings, location())\n          },\n      peg$c78 = function(start, al) { return al },\n      peg$c79 = function(start, rest) {\n              return rest.reduce((acc, item) => acc.concat(item), start)\n          },\n      peg$c80 = function(indent) {\n              if (IDT_TOK === null) {\n                  IDT_TOK = indent.indexOf('\\t') < 0 ? indent : '\\t'\n              }\n              return indent.length === (IDT + 1) * IDT_TOK.length\n          },\n      peg$c81 = function(indent, pairs) {\n              return pairs\n          },\n      peg$c82 = \",\",\n      peg$c83 = peg$literalExpectation(\",\", false),\n      peg$c84 = function(start, pair) { return pair },\n      peg$c85 = peg$otherExpectation(\"Attribute pair\"),\n      peg$c86 = function(ns, key) {\n              return new ast.Attribute(ns, key, [], location())\n          },\n      peg$c87 = function(ns, key, v) {return v},\n      peg$c88 = function(ns, key, value) {\n              return new ast.Attribute(ns, key, value, location())\n          },\n      peg$c89 = function(v) {return v},\n      peg$c90 = function(value) {\n              return new ast.Attribute(null, null, value, location())\n          },\n      peg$c91 = peg$otherExpectation(\"Attribute setting\"),\n      peg$c92 = \"&\",\n      peg$c93 = peg$literalExpectation(\"&\", false),\n      peg$c94 = /^[#a-zA-Z0-9]/,\n      peg$c95 = peg$classExpectation([\"#\", [\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false),\n      peg$c96 = \";\",\n      peg$c97 = peg$literalExpectation(\";\", false),\n      peg$c98 = function(name, c) { return c },\n      peg$c99 = function(name, attrs) {\n              return new ast.Setting(name, attrs, location())\n          },\n      peg$c100 = function(start, n) { return n},\n      peg$c101 = peg$otherExpectation(\"Attribute value\"),\n      peg$c102 = function(name, attributes) {\n              return new ast.Helper(name, attributes, location())\n          },\n      peg$c103 = function(start, v) {return v},\n      peg$c104 = function(start, rest) {\n              rest.unshift(start)\n              return rest\n          },\n      peg$c105 = function(name, value) {\n              return new ast.HelperAttribute(name, value, location())\n          },\n      peg$c106 = function(value) {\n              return new ast.HelperAttribute(null, value, location())\n          },\n      peg$c107 = function(value, c) { return c },\n      peg$c108 = function(value, ts) {\n              return new ast.TransformValue(value, ts, location())\n          },\n      peg$c109 = function(name, first, v) {return v},\n      peg$c110 = function(name, first, rest) {\n              rest.unshift(first)\n              return new ast.Transformer(name, rest, location())\n          },\n      peg$c111 = function(s) { return new ast.StringValue(s, location()) },\n      peg$c112 = function(n) { return new ast.NumberValue(n, location()) },\n      peg$c113 = function(b) { return new ast.BooleanValue(b, location()) },\n      peg$c114 = \"null\",\n      peg$c115 = peg$literalExpectation(\"null\", false),\n      peg$c116 = function() { return new ast.NullValue(location()) },\n      peg$c117 = function(i) { return new ast.IdentifierValue(i, location()) },\n      peg$c118 = /^[.\\/]/,\n      peg$c119 = peg$classExpectation([\".\", \"/\"], false, false),\n      peg$c120 = function(p, s) {\n          return new ast.IdentifierValue(p + s, location())\n      },\n      peg$c121 = peg$otherExpectation(\"Compare Operator\"),\n      peg$c122 = \"==\",\n      peg$c123 = peg$literalExpectation(\"==\", false),\n      peg$c124 = \">=\",\n      peg$c125 = peg$literalExpectation(\">=\", false),\n      peg$c126 = \"<=\",\n      peg$c127 = peg$literalExpectation(\"<=\", false),\n      peg$c128 = \">\",\n      peg$c129 = peg$literalExpectation(\">\", false),\n      peg$c130 = \"<\",\n      peg$c131 = peg$literalExpectation(\"<\", false),\n      peg$c132 = \"!=\",\n      peg$c133 = peg$literalExpectation(\"!=\", false),\n      peg$c134 = function() {\n          return new ast.CompareOperatorValue(text(), location())\n      },\n      peg$c135 = peg$otherExpectation(\"Blank line\"),\n      peg$c136 = peg$otherExpectation(\"Identifier\"),\n      peg$c137 = /^[a-zA-Z$@_]/,\n      peg$c138 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], \"$\", \"@\", \"_\"], false, false),\n      peg$c139 = /^[a-zA-Z0-9$_\\-]/,\n      peg$c140 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \"$\", \"_\", \"-\"], false, false),\n      peg$c141 = function(start, rest) {\n              return start + rest\n          },\n      peg$c142 = peg$otherExpectation(\"End of line\"),\n      peg$c143 = \"\\n\",\n      peg$c144 = peg$literalExpectation(\"\\n\", false),\n      peg$c145 = \"\\r\",\n      peg$c146 = peg$literalExpectation(\"\\r\", false),\n      peg$c147 = \"\\r\\n\",\n      peg$c148 = peg$literalExpectation(\"\\r\\n\", false),\n      peg$c149 = peg$otherExpectation(\"Whitespace\"),\n      peg$c150 = \"\\t\",\n      peg$c151 = peg$literalExpectation(\"\\t\", false),\n      peg$c152 = \" \",\n      peg$c153 = peg$literalExpectation(\" \", false),\n      peg$c154 = \"\\x0B\",\n      peg$c155 = peg$literalExpectation(\"\\x0B\", false),\n      peg$c156 = \"\\f\",\n      peg$c157 = peg$literalExpectation(\"\\f\", false),\n      peg$c158 = peg$otherExpectation(\"Indents\"),\n      peg$c159 = function(spaces) {\n              if (IDT_TOK === null) IDT_TOK = spaces\n              return spaces.length % IDT_TOK.length === 0\n          },\n      peg$c160 = function(spaces) {\n              return spaces.length / IDT_TOK.length\n          },\n      peg$c161 = function(tabs) {\n              if (IDT_TOK === null) IDT_TOK = '\\t'\n              return IDT_TOK === '\\t'\n          },\n      peg$c162 = function(tabs) {\n              return tabs.length\n          },\n      peg$c163 = peg$otherExpectation(\"Quoted string\"),\n      peg$c164 = \"\\\"\",\n      peg$c165 = peg$literalExpectation(\"\\\"\", false),\n      peg$c166 = function(chars) { return chars },\n      peg$c167 = \"'\",\n      peg$c168 = peg$literalExpectation(\"'\", false),\n      peg$c169 = peg$otherExpectation(\"Double quoted string char\"),\n      peg$c170 = function() { return text() },\n      peg$c171 = function(char) { return char },\n      peg$c172 = peg$otherExpectation(\"Single quoted string char\"),\n      peg$c173 = peg$otherExpectation(\"Escaped char\"),\n      peg$c174 = \"0\",\n      peg$c175 = peg$literalExpectation(\"0\", false),\n      peg$c176 = /^[0-9]/,\n      peg$c177 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n      peg$c178 = function() { return '\\0' },\n      peg$c179 = /^[nfrt]/,\n      peg$c180 = peg$classExpectation([\"n\", \"f\", \"r\", \"t\"], false, false),\n      peg$c181 = function(c) { return '\\\\' + c },\n      peg$c182 = \"b\",\n      peg$c183 = peg$literalExpectation(\"b\", false),\n      peg$c184 = function() { return '\\x0B' },\n      peg$c185 = peg$otherExpectation(\"Boolean\"),\n      peg$c186 = \"true\",\n      peg$c187 = peg$literalExpectation(\"true\", false),\n      peg$c188 = function() { return true },\n      peg$c189 = \"false\",\n      peg$c190 = peg$literalExpectation(\"false\", false),\n      peg$c191 = function() { return false},\n      peg$c192 = peg$otherExpectation(\"Number\"),\n      peg$c193 = /^[+\\-]/,\n      peg$c194 = peg$classExpectation([\"+\", \"-\"], false, false),\n      peg$c195 = function(sign, n) {\n              return sign === '-' ? -n : n\n          },\n      peg$c196 = \"0x\",\n      peg$c197 = peg$literalExpectation(\"0x\", true),\n      peg$c198 = /^[0-9a-f]/i,\n      peg$c199 = peg$classExpectation([[\"0\", \"9\"], [\"a\", \"f\"]], false, true),\n      peg$c200 = function() {\n              return parseInt(text(), 16)\n          },\n      peg$c201 = /^[0-7]/,\n      peg$c202 = peg$classExpectation([[\"0\", \"7\"]], false, false),\n      peg$c203 = function() {\n              return parseInt(text(), 8)\n          },\n      peg$c204 = function() {\n              return parseFloat(text())\n          },\n      peg$c205 = /^[1-9]/,\n      peg$c206 = peg$classExpectation([[\"1\", \"9\"]], false, false),\n      peg$c207 = \"e\",\n      peg$c208 = peg$literalExpectation(\"e\", true),\n\n      peg$currPos          = 0,\n      peg$savedPos         = 0,\n      peg$posDetailsCache  = [{ line: 1, column: 1 }],\n      peg$maxFailPos       = 0,\n      peg$maxFailExpected  = [],\n      peg$silentFails      = 0,\n\n      peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos], p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line:   details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n      return details;\n    }\n  }\n\n  function peg$computeLocation(startPos, endPos) {\n    var startPosDetails = peg$computePosDetails(startPos),\n        endPosDetails   = peg$computePosDetails(endPos);\n\n    return {\n      start: {\n        offset: startPos,\n        line:   startPosDetails.line,\n        column: startPosDetails.column\n      },\n      end: {\n        offset: endPos,\n        line:   endPosDetails.line,\n        column: endPosDetails.column\n      }\n    };\n  }\n\n  function peg$fail(expected) {\n    if (peg$currPos < peg$maxFailPos) { return; }\n\n    if (peg$currPos > peg$maxFailPos) {\n      peg$maxFailPos = peg$currPos;\n      peg$maxFailExpected = [];\n    }\n\n    peg$maxFailExpected.push(expected);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedeclare_line();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parseblank_line();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parseblank_line();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsenodes();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parseblank_line();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parseblank_line();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c0(s1, s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedeclare_line() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c1) {\n      s1 = peg$c1;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c2); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseidentifier();\n        if (s3 !== peg$FAILED) {\n          s4 = peg$currPos;\n          s5 = [];\n          s6 = peg$parse_();\n          if (s6 !== peg$FAILED) {\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n          } else {\n            s5 = peg$FAILED;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseidentifier();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$currPos;\n              peg$silentFails++;\n              s8 = peg$currPos;\n              s9 = [];\n              s10 = peg$parse_();\n              while (s10 !== peg$FAILED) {\n                s9.push(s10);\n                s10 = peg$parse_();\n              }\n              if (s9 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 61) {\n                  s10 = peg$c3;\n                  peg$currPos++;\n                } else {\n                  s10 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c4); }\n                }\n                if (s10 !== peg$FAILED) {\n                  s9 = [s9, s10];\n                  s8 = s9;\n                } else {\n                  peg$currPos = s8;\n                  s8 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              peg$silentFails--;\n              if (s8 === peg$FAILED) {\n                s7 = void 0;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s4;\n                s5 = peg$c5(s3, s6);\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$currPos;\n            s7 = [];\n            s8 = peg$parse_();\n            if (s8 !== peg$FAILED) {\n              while (s8 !== peg$FAILED) {\n                s7.push(s8);\n                s8 = peg$parse_();\n              }\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsekey_value_pair();\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s6;\n                s7 = peg$c6(s3, s4, s8);\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$currPos;\n              s7 = [];\n              s8 = peg$parse_();\n              if (s8 !== peg$FAILED) {\n                while (s8 !== peg$FAILED) {\n                  s7.push(s8);\n                  s8 = peg$parse_();\n                }\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsekey_value_pair();\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c6(s3, s4, s8);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseeol();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c7(s3, s4, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsekey_value_pair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c3;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$currPos;\n            s8 = peg$currPos;\n            peg$silentFails++;\n            s9 = peg$parse_();\n            if (s9 === peg$FAILED) {\n              s9 = peg$parseeol();\n            }\n            peg$silentFails--;\n            if (s9 === peg$FAILED) {\n              s8 = void 0;\n            } else {\n              peg$currPos = s8;\n              s8 = peg$FAILED;\n            }\n            if (s8 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s9 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s9 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c8); }\n              }\n              if (s9 !== peg$FAILED) {\n                s8 = [s8, s9];\n                s7 = s8;\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s7;\n              s7 = peg$FAILED;\n            }\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$currPos;\n              s8 = peg$currPos;\n              peg$silentFails++;\n              s9 = peg$parse_();\n              if (s9 === peg$FAILED) {\n                s9 = peg$parseeol();\n              }\n              peg$silentFails--;\n              if (s9 === peg$FAILED) {\n                s8 = void 0;\n              } else {\n                peg$currPos = s8;\n                s8 = peg$FAILED;\n              }\n              if (s8 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s9 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s9 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c8); }\n                }\n                if (s9 !== peg$FAILED) {\n                  s8 = [s8, s9];\n                  s7 = s8;\n                } else {\n                  peg$currPos = s7;\n                  s7 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s7;\n                s7 = peg$FAILED;\n              }\n            }\n            if (s6 !== peg$FAILED) {\n              s5 = input.substring(s5, peg$currPos);\n            } else {\n              s5 = s6;\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c9(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenodes() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenode();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parsenode_sep();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsenode();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c10(s1, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parsenode_sep();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsenode();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c10(s1, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenode() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenode_parent();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsenode_child();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsenode_child();\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c12(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenode_parent() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsetag_body();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c13(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenode_child() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenode_sep();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenode_indent();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c14(s2);\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenode();\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c15(s2, s4);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (peg$c16.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c17); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              s4 = peg$parse_();\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsenode();\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c18(s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s2 = peg$c19;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                s4 = peg$parse_();\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsenode();\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c21(s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsetag_text();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c22(s1);\n          }\n          s0 = s1;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenode_sep() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeol();\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parseblank_line();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parseblank_line();\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenode_indent() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidt();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c24(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetag_body() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenode_indent();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenamespace();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseidentifier();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parsetag_class();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parsetag_class();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsetag_id();\n            if (s5 === peg$FAILED) {\n              s5 = null;\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parsetag_class();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parsetag_class();\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = peg$currPos;\n                s7 = peg$c25(s2, s3, s4, s5, s6);\n                if (s7) {\n                  s7 = void 0;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  s8 = peg$parseattr_groups();\n                  if (s8 === peg$FAILED) {\n                    s8 = null;\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s9 = peg$parsetag_extra();\n                    if (s9 === peg$FAILED) {\n                      s9 = null;\n                    }\n                    if (s9 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s1 = peg$c26(s2, s3, s4, s5, s6, s8, s9);\n                      s0 = s1;\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenamespace();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 124) {\n          s2 = peg$c27;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattr_groups();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c29(s1, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 35) {\n          s1 = peg$c30;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c31); }\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c32();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenamespace() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s2 = peg$c33;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c34); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parse_();\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c35(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag_class() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 46) {\n      s1 = peg$c36;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c37); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseidentifier();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c35(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag_id() {\n    var s0, s1, s2;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 35) {\n      s1 = peg$c30;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c31); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseidentifier();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c35(s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag_extra() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 64) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c39); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseidentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseextra_values();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c40(s2, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseextra_values() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c41;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c42); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseextra_value();\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$currPos;\n          s6 = [];\n          s7 = peg$parse_();\n          if (s7 !== peg$FAILED) {\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parse_();\n            }\n          } else {\n            s6 = peg$FAILED;\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseextra_value();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s5;\n              s6 = peg$c43(s3, s7);\n              s5 = s6;\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s5;\n            s5 = peg$FAILED;\n          }\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$currPos;\n            s6 = [];\n            s7 = peg$parse_();\n            if (s7 !== peg$FAILED) {\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parse_();\n              }\n            } else {\n              s6 = peg$FAILED;\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseextra_value();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s5;\n                s6 = peg$c43(s3, s7);\n                s5 = s6;\n              } else {\n                peg$currPos = s5;\n                s5 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s5;\n              s5 = peg$FAILED;\n            }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c44;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c45); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c46(s3, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseextra_value() {\n    var s0;\n\n    s0 = peg$parsenormal_value();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsecompare_value();\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag_text() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c47) {\n        s2 = peg$c47;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s3 = peg$c49();\n        if (s3) {\n          s3 = void 0;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseeol();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parsetag_text_lines();\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c50(s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parse_();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parse_();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s2 = peg$c36;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = peg$currPos;\n          s3 = peg$c51();\n          if (s3) {\n            s3 = void 0;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = [];\n            s5 = peg$parse_();\n            while (s5 !== peg$FAILED) {\n              s4.push(s5);\n              s5 = peg$parse_();\n            }\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parseeol();\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parsetag_text_lines();\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c50(s6);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$currPos;\n          peg$silentFails++;\n          s3 = peg$currPos;\n          if (peg$c52.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c53); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parse_();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          peg$silentFails--;\n          if (s3 === peg$FAILED) {\n            s2 = void 0;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parsetext_to_end();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c54(s3);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag_text_lines() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parsettl();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = peg$parseeol();\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parsettl();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c55(s1, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = peg$parseeol();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsettl();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c55(s1, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c56(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsettl() {\n    var s0, s1, s2, s3, s4, s5;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    s3 = peg$parse_();\n    while (s3 !== peg$FAILED) {\n      s2.push(s3);\n      s3 = peg$parse_();\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c58(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetext_to_end();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c59(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$parse_();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parse_();\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$currPos;\n        peg$silentFails++;\n        s5 = peg$parseeol();\n        peg$silentFails--;\n        if (s5 !== peg$FAILED) {\n          peg$currPos = s4;\n          s4 = void 0;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s3 = peg$c60(s3);\n          s2 = s3;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c61(s1);\n      }\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c57); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsetext_to_end() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = [];\n    s1 = peg$parsestatic_text();\n    if (s1 === peg$FAILED) {\n      s1 = peg$parsedynamic_text();\n    }\n    if (s1 !== peg$FAILED) {\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        s1 = peg$parsestatic_text();\n        if (s1 === peg$FAILED) {\n          s1 = peg$parsedynamic_text();\n        }\n      }\n    } else {\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c62); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestatic_text() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$parseplain_text();\n    if (s1 === peg$FAILED) {\n      s1 = peg$currPos;\n      if (input.substr(peg$currPos, 2) === peg$c63) {\n        s2 = peg$c63;\n        peg$currPos += 2;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c64); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseplain_text();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s1;\n          s2 = peg$c65(s3);\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s2 = peg$c66;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseplain_text();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c68(s3);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c69(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseplain_text() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$currPos;\n    s3 = peg$currPos;\n    peg$silentFails++;\n    s4 = peg$parseeol();\n    if (s4 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s4 = peg$c70;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s4 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 92) {\n          s4 = peg$c66;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c67); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s4 === peg$FAILED) {\n      s3 = void 0;\n    } else {\n      peg$currPos = s3;\n      s3 = peg$FAILED;\n    }\n    if (s3 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s4 !== peg$FAILED) {\n        s3 = [s3, s4];\n        s2 = s3;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s2;\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$currPos;\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$parseeol();\n        if (s4 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 36) {\n            s4 = peg$c70;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c71); }\n          }\n          if (s4 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c66;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c67); }\n            }\n          }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          if (input.length > peg$currPos) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c8); }\n          }\n          if (s4 !== peg$FAILED) {\n            s3 = [s3, s4];\n            s2 = s3;\n          } else {\n            peg$currPos = s2;\n            s2 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsedynamic_text() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 36) {\n      s1 = peg$c70;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c71); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseidentifier_value();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s4 = peg$c41;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c72(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s1 = peg$c70;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c71); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsehelper();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c73(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_groups() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseattr_group();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseattr_group();\n        if (s5 !== peg$FAILED) {\n          peg$savedPos = s3;\n          s4 = peg$c74(s1, s5);\n          s3 = s4;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parse_();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseattr_group();\n          if (s5 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c74(s1, s5);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_group() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9, s10;\n\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parseattr_pairs();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c44;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c45); }\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseattr_settings();\n                if (s7 === peg$FAILED) {\n                  s7 = null;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c75(s4, s7);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = [];\n      s2 = peg$parse_();\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        s2 = peg$parse_();\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s2 = peg$c41;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c42); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseeol();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseattr_lines();\n            if (s4 !== peg$FAILED) {\n              s5 = [];\n              s6 = peg$parse_();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parse_();\n              }\n              if (s5 !== peg$FAILED) {\n                s6 = peg$parseeol();\n                if (s6 !== peg$FAILED) {\n                  s7 = peg$currPos;\n                  s8 = [];\n                  s9 = peg$parse_();\n                  while (s9 !== peg$FAILED) {\n                    s8.push(s9);\n                    s9 = peg$parse_();\n                  }\n                  if (s8 !== peg$FAILED) {\n                    s7 = input.substring(s7, peg$currPos);\n                  } else {\n                    s7 = s8;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = peg$currPos;\n                    s8 = peg$c76(s4, s7);\n                    if (s8) {\n                      s8 = void 0;\n                    } else {\n                      s8 = peg$FAILED;\n                    }\n                    if (s8 !== peg$FAILED) {\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s9 = peg$c44;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                        if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                      }\n                      if (s9 !== peg$FAILED) {\n                        s10 = peg$parseattr_settings();\n                        if (s10 === peg$FAILED) {\n                          s10 = null;\n                        }\n                        if (s10 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s1 = peg$c77(s4, s7, s10);\n                          s0 = s1;\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_lines() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseattr_line();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        s5 = peg$parseeol();\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseattr_line();\n          if (s6 !== peg$FAILED) {\n            peg$savedPos = s3;\n            s4 = peg$c78(s1, s6);\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parse_();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseeol();\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseattr_line();\n            if (s6 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c78(s1, s6);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c79(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_line() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    s3 = peg$parse_();\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c80(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseattr_pairs();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c81(s1, s3);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_pairs() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseattr_pair();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c82;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c83); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parse_();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parse_();\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseattr_pair();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c84(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parse_();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c82;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c83); }\n          }\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parse_();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parse_();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseattr_pair();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c84(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_pair() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$parsenamespace();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseidentifier();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$currPos;\n        s5 = [];\n        s6 = peg$parse_();\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          s6 = peg$parse_();\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 61) {\n            s6 = peg$c3;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c4); }\n          }\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c86(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenamespace();\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifier();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 61) {\n              s5 = peg$c3;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c4); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parse_();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parse_();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseattr_values();\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c87(s1, s2, s7);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c88(s1, s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$currPos;\n        s2 = [];\n        s3 = peg$parse_();\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$parse_();\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattr_values();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s1;\n            s2 = peg$c89(s3);\n            s1 = s2;\n          } else {\n            peg$currPos = s1;\n            s1 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c90(s1);\n        }\n        s0 = s1;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c85); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_settings() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 38) {\n        s2 = peg$c92;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c93); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$currPos;\n        peg$silentFails++;\n        s4 = peg$currPos;\n        s5 = [];\n        if (peg$c94.test(input.charAt(peg$currPos))) {\n          s6 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s6 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c95); }\n        }\n        while (s6 !== peg$FAILED) {\n          s5.push(s6);\n          if (peg$c94.test(input.charAt(peg$currPos))) {\n            s6 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c95); }\n          }\n        }\n        if (s5 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 59) {\n            s6 = peg$c96;\n            peg$currPos++;\n          } else {\n            s6 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c97); }\n          }\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        peg$silentFails--;\n        if (s4 === peg$FAILED) {\n          s3 = void 0;\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifier();\n            if (s5 !== peg$FAILED) {\n              s6 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s7 = peg$c41;\n                peg$currPos++;\n              } else {\n                s7 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c42); }\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parseattr_pairs();\n                if (s8 !== peg$FAILED) {\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s9 = peg$c44;\n                    peg$currPos++;\n                  } else {\n                    s9 = peg$FAILED;\n                    if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                  }\n                  if (s9 !== peg$FAILED) {\n                    peg$savedPos = s6;\n                    s7 = peg$c98(s5, s8);\n                    s6 = s7;\n                  } else {\n                    peg$currPos = s6;\n                    s6 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n              if (s6 === peg$FAILED) {\n                s6 = null;\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99(s5, s6);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c91); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_values() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parseattr_value();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 43) {\n          s5 = peg$c19;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c20); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parse_();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parse_();\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parseattr_value();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c100(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parse_();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 43) {\n            s5 = peg$c19;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c20); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parse_();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parse_();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseattr_value();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c100(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c11(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseattr_value() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$parsehelper();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenormal_value();\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c101); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehelper() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsehelper_attrs();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$parse_();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parse_();\n            }\n            if (s5 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s6 = peg$c44;\n                peg$currPos++;\n              } else {\n                s6 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c45); }\n              }\n              if (s6 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c102(s1, s4);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsehelper_attrs() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsehelper_attr();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 44) {\n          s5 = peg$c82;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c83); }\n        }\n        if (s5 === peg$FAILED) {\n          s5 = null;\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parse_();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parse_();\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsehelper_attr();\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c103(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$currPos;\n        s4 = [];\n        s5 = peg$parse_();\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          s5 = peg$parse_();\n        }\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c82;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c83); }\n          }\n          if (s5 === peg$FAILED) {\n            s5 = null;\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = [];\n            s7 = peg$parse_();\n            while (s7 !== peg$FAILED) {\n              s6.push(s7);\n              s7 = peg$parse_();\n            }\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parsehelper_attr();\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c103(s1, s7);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c104(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsehelper_attr() {\n    var s0, s1, s2, s3, s4, s5;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parse_();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parse_();\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s3 = peg$c3;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c4); }\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsehelper_value();\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c105(s1, s5);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsehelper_value();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c106(s1);\n      }\n      s0 = s1;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransform() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenormal_value();\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$currPos;\n      s4 = [];\n      s5 = peg$parse_();\n      while (s5 !== peg$FAILED) {\n        s4.push(s5);\n        s5 = peg$parse_();\n      }\n      if (s4 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 124) {\n          s5 = peg$c27;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c28); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = [];\n          s7 = peg$parse_();\n          while (s7 !== peg$FAILED) {\n            s6.push(s7);\n            s7 = peg$parse_();\n          }\n          if (s6 !== peg$FAILED) {\n            s7 = peg$parsetransformer();\n            if (s7 === peg$FAILED) {\n              s7 = peg$parsenormal_value();\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c107(s1, s7);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s3;\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = [];\n          s5 = peg$parse_();\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            s5 = peg$parse_();\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 124) {\n              s5 = peg$c27;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c28); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parse_();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parse_();\n              }\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parsetransformer();\n                if (s7 === peg$FAILED) {\n                  s7 = peg$parsenormal_value();\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c107(s1, s7);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c108(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetransformer() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8;\n\n    s0 = peg$currPos;\n    s1 = peg$parseidentifier();\n    if (s1 !== peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 40) {\n        s2 = peg$c41;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c42); }\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = [];\n        s4 = peg$parse_();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parse_();\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsenormal_value();\n          if (s4 !== peg$FAILED) {\n            s5 = [];\n            s6 = peg$currPos;\n            s7 = [];\n            s8 = peg$parse_();\n            while (s8 !== peg$FAILED) {\n              s7.push(s8);\n              s8 = peg$parse_();\n            }\n            if (s7 !== peg$FAILED) {\n              s8 = peg$parsenormal_value();\n              if (s8 !== peg$FAILED) {\n                peg$savedPos = s6;\n                s7 = peg$c109(s1, s4, s8);\n                s6 = s7;\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s6;\n              s6 = peg$FAILED;\n            }\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$currPos;\n              s7 = [];\n              s8 = peg$parse_();\n              while (s8 !== peg$FAILED) {\n                s7.push(s8);\n                s8 = peg$parse_();\n              }\n              if (s7 !== peg$FAILED) {\n                s8 = peg$parsenormal_value();\n                if (s8 !== peg$FAILED) {\n                  peg$savedPos = s6;\n                  s7 = peg$c109(s1, s4, s8);\n                  s6 = s7;\n                } else {\n                  peg$currPos = s6;\n                  s6 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s6;\n                s6 = peg$FAILED;\n              }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = [];\n              s7 = peg$parse_();\n              while (s7 !== peg$FAILED) {\n                s6.push(s7);\n                s7 = peg$parse_();\n              }\n              if (s6 !== peg$FAILED) {\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s7 = peg$c44;\n                  peg$currPos++;\n                } else {\n                  s7 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c45); }\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c110(s1, s4, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring_value() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsequoted_string();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c111(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenumber_value() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsenumber();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c112(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseboolean_value() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parseboolean();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c113(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsenull_value() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c114) {\n      s1 = peg$c114;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c115); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c116();\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parseidentifier_value() {\n    var s0, s1;\n\n    s0 = peg$currPos;\n    s1 = peg$parsedot_identifier();\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c117(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsepath_identifier_value() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (peg$c118.test(input.charAt(peg$currPos))) {\n      s3 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c119); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c118.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c119); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsedot_identifier();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c120(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsecompare_value() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2) === peg$c122) {\n      s1 = peg$c122;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c123); }\n    }\n    if (s1 === peg$FAILED) {\n      if (input.substr(peg$currPos, 2) === peg$c124) {\n        s1 = peg$c124;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c125); }\n      }\n      if (s1 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c126) {\n          s1 = peg$c126;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c127); }\n        }\n        if (s1 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 62) {\n            s1 = peg$c128;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c129); }\n          }\n          if (s1 === peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 60) {\n              s1 = peg$c130;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c131); }\n            }\n            if (s1 === peg$FAILED) {\n              if (input.substr(peg$currPos, 2) === peg$c132) {\n                s1 = peg$c132;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c133); }\n              }\n            }\n          }\n        }\n      }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c134();\n    }\n    s0 = s1;\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c121); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenormal_value() {\n    var s0;\n\n    s0 = peg$parsestring_value();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenumber_value();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseboolean_value();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsenull_value();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseidentifier_value();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsepath_identifier_value();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsehelper_value() {\n    var s0;\n\n    s0 = peg$parsetransform();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsenormal_value();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parsecompare_value();\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseblank_line() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = [];\n    s2 = peg$parse_();\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      s2 = peg$parse_();\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseeol();\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c135); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedot_identifier() {\n    var s0, s1, s2, s3, s4, s5, s6;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = peg$parseidentifier();\n    if (s2 !== peg$FAILED) {\n      s3 = [];\n      s4 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s5 = peg$c36;\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c37); }\n      }\n      if (s5 !== peg$FAILED) {\n        s6 = peg$parseidentifier();\n        if (s6 !== peg$FAILED) {\n          s5 = [s5, s6];\n          s4 = s5;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s4;\n        s4 = peg$FAILED;\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s5 = peg$c36;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c37); }\n        }\n        if (s5 !== peg$FAILED) {\n          s6 = peg$parseidentifier();\n          if (s6 !== peg$FAILED) {\n            s5 = [s5, s6];\n            s4 = s5;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = [s2, s3];\n        s1 = s2;\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s0 = input.substring(s0, peg$currPos);\n    } else {\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c136); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidentifier() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c137.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c138); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      if (peg$c139.test(input.charAt(peg$currPos))) {\n        s4 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c140); }\n      }\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        if (peg$c139.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c140); }\n        }\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c141(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c136); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseeol() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 10) {\n      s0 = peg$c143;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c144); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 13) {\n        s0 = peg$c145;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c146); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.substr(peg$currPos, 2) === peg$c147) {\n          s0 = peg$c147;\n          peg$currPos += 2;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c148); }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c142); }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 9) {\n      s0 = peg$c150;\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c151); }\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s0 = peg$c152;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c153); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 11) {\n          s0 = peg$c154;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c155); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 12) {\n            s0 = peg$c156;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c157); }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c149); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseidt() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    s2 = [];\n    if (input.charCodeAt(peg$currPos) === 32) {\n      s3 = peg$c152;\n      peg$currPos++;\n    } else {\n      s3 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c153); }\n    }\n    if (s3 !== peg$FAILED) {\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s3 = peg$c152;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c153); }\n        }\n      }\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      s1 = input.substring(s1, peg$currPos);\n    } else {\n      s1 = s2;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = peg$currPos;\n      s2 = peg$c159(s1);\n      if (s2) {\n        s2 = void 0;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c160(s1);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (input.charCodeAt(peg$currPos) === 9) {\n        s3 = peg$c150;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c151); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (input.charCodeAt(peg$currPos) === 9) {\n            s3 = peg$c150;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c151); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = input.substring(s1, peg$currPos);\n      } else {\n        s1 = s2;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = peg$currPos;\n        s2 = peg$c161(s1);\n        if (s2) {\n          s2 = void 0;\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c162(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c158); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsequoted_string() {\n    var s0, s1, s2, s3, s4;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c164;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c165); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      s3 = [];\n      s4 = peg$parsedqs();\n      while (s4 !== peg$FAILED) {\n        s3.push(s4);\n        s4 = peg$parsedqs();\n      }\n      if (s3 !== peg$FAILED) {\n        s2 = input.substring(s2, peg$currPos);\n      } else {\n        s2 = s3;\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 34) {\n          s3 = peg$c164;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c165); }\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c166(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 39) {\n        s1 = peg$c167;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c168); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        s3 = [];\n        s4 = peg$parsesqs();\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsesqs();\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = input.substring(s2, peg$currPos);\n        } else {\n          s2 = s3;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 39) {\n            s3 = peg$c167;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c168); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c166(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c163); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedqs() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s2 = peg$c164;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c165); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c66;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseeol();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c170();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c66;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseec();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c171(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c169); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesqs() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    peg$silentFails++;\n    if (input.charCodeAt(peg$currPos) === 39) {\n      s2 = peg$c167;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c168); }\n    }\n    if (s2 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s2 = peg$c66;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = peg$parseeol();\n      }\n    }\n    peg$silentFails--;\n    if (s2 === peg$FAILED) {\n      s1 = void 0;\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      if (input.length > peg$currPos) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c8); }\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c170();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 92) {\n        s1 = peg$c66;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c67); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseec();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c171(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c172); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseec() {\n    var s0, s1, s2, s3;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 48) {\n      s1 = peg$c174;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c175); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      peg$silentFails++;\n      if (peg$c176.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c177); }\n      }\n      peg$silentFails--;\n      if (s3 === peg$FAILED) {\n        s2 = void 0;\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c178();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s0 = peg$c164;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c165); }\n      }\n      if (s0 === peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s0 = peg$c167;\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c168); }\n        }\n        if (s0 === peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s0 = peg$c66;\n            peg$currPos++;\n          } else {\n            s0 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (peg$c179.test(input.charAt(peg$currPos))) {\n              s1 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c180); }\n            }\n            if (s1 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c181(s1);\n            }\n            s0 = s1;\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 98) {\n                s1 = peg$c182;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c183); }\n              }\n              if (s1 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c184();\n              }\n              s0 = s1;\n            }\n          }\n        }\n      }\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c173); }\n    }\n\n    return s0;\n  }\n\n  function peg$parseboolean() {\n    var s0, s1;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 4) === peg$c186) {\n      s1 = peg$c186;\n      peg$currPos += 4;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c187); }\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$c188();\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c189) {\n        s1 = peg$c189;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c190); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c191();\n      }\n      s0 = s1;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c185); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber() {\n    var s0, s1, s2;\n\n    peg$silentFails++;\n    s0 = peg$currPos;\n    if (peg$c193.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c194); }\n    }\n    if (s1 === peg$FAILED) {\n      s1 = null;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsenumber_def();\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c195(s1, s2);\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    peg$silentFails--;\n    if (s0 === peg$FAILED) {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c192); }\n    }\n\n    return s0;\n  }\n\n  function peg$parsenumber_def() {\n    var s0, s1, s2, s3, s4;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 2).toLowerCase() === peg$c196) {\n      s1 = input.substr(peg$currPos, 2);\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c197); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c198.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c199); }\n      }\n      if (s3 !== peg$FAILED) {\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c198.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c199); }\n          }\n        }\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c200();\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s1 = peg$c174;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c175); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c201.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c202); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c201.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c202); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c203();\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseint();\n        if (s1 === peg$FAILED) {\n          s1 = null;\n        }\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s2 = peg$c36;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c37); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = [];\n            if (peg$c176.test(input.charAt(peg$currPos))) {\n              s4 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c177); }\n            }\n            if (s4 !== peg$FAILED) {\n              while (s4 !== peg$FAILED) {\n                s3.push(s4);\n                if (peg$c176.test(input.charAt(peg$currPos))) {\n                  s4 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s4 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c177); }\n                }\n              }\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parseexponent();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              if (s4 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c204();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseint();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseexponent();\n            if (s2 === peg$FAILED) {\n              s2 = null;\n            }\n            if (s2 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c204();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseint() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (peg$c205.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c206); }\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      if (peg$c176.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c177); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c176.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c177); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        s1 = [s1, s2];\n        s0 = s1;\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      if (input.charCodeAt(peg$currPos) === 48) {\n        s0 = peg$c174;\n        peg$currPos++;\n      } else {\n        s0 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c175); }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexponent() {\n    var s0, s1, s2, s3;\n\n    s0 = peg$currPos;\n    if (input.substr(peg$currPos, 1).toLowerCase() === peg$c207) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n      if (peg$silentFails === 0) { peg$fail(peg$c208); }\n    }\n    if (s1 !== peg$FAILED) {\n      if (peg$c193.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c194); }\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parseint();\n        if (s3 !== peg$FAILED) {\n          s1 = [s1, s2, s3];\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n      const parents = []\n      const ast = options.ast\n      const parent = () => parents[parents.length - 1]\n      const flatSibling = (nodes) => nodes.reduce((acc, item) => {\n          acc.push(item)\n          while (acc[acc.length - 1].sibling) {\n              const last = acc[acc.length - 1]\n              acc.push(last.sibling)\n              delete last.sibling\n          }\n          return acc\n      }, [])\n\n      let IDT = 0\n      let IDT_TOK = null\n      let textIndent = 0\n\n\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$fail(peg$endExpectation());\n    }\n\n    throw peg$buildStructuredError(\n      peg$maxFailExpected,\n      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n      peg$maxFailPos < input.length\n        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n    );\n  }\n}\n\nmodule.exports = {\n  SyntaxError: peg$SyntaxError,\n  parse:       peg$parse\n};\n","import { Location } from './sleet'\n\nexport enum NodeType {\n    Declaration, Tag, TagExtra, AttributeGroup, Attribute, Setting,\n    StringValue, BooleanValue, NumberValue, NullValue, IdentifierValue, CompareOperator,\n    Transformer, TransformValue,\n    Helper, HelperAttribute,\n    StaticText, DynamicText\n}\n\nexport class SleetNode {\n    protected _location: Location\n    private _type: NodeType\n\n    constructor(type: NodeType, location: Location) {\n        this._type = type\n        this._location = location\n    }\n\n    get type () {\n        return this._type\n    }\n\n    get location () {\n        return this._location\n    }\n}\n\nclass NamedParentNode<T> extends SleetNode {\n    private _name: T\n\n    constructor (name: T, type: NodeType, location: Location) {\n        super(type, location)\n        this._name = name\n    }\n\n    get name () {\n        return this._name\n    }\n}\n\nclass NamedNode extends NamedParentNode<string> {\n}\n\nclass NullableNamedNode extends NamedParentNode<string | undefined> {\n}\n\nexport class SleetValue<T> extends SleetNode {\n    protected _value: T\n\n    constructor(value: T, type: NodeType, location: Location) {\n        super(type, location)\n        this._value = value\n    }\n\n    get value () {\n        return this._value\n    }\n\n    toHTMLString () {\n        return this._value + ''\n    }\n}\n\nexport class StringValue extends SleetValue<string> {\n    constructor(value: string, location: Location) {\n        super(value, NodeType.StringValue, location)\n    }\n\n    toHTMLString () {\n        return `\"${this._value.replace(/\"/g, '\\\\\"')}\"`\n    }\n}\n\nexport class BooleanValue extends SleetValue<boolean> {\n    constructor(value: boolean, location: Location) {\n        super(value, NodeType.BooleanValue, location)\n    }\n}\n\nexport class NumberValue extends SleetValue<number> {\n    constructor(value: number, location: Location) {\n        super(value, NodeType.NumberValue, location)\n    }\n}\n\nexport class NullValue extends SleetValue<null> {\n    constructor(location: Location) {\n        super(null, NodeType.NullValue, location)\n    }\n}\n\nexport class IdentifierValue extends SleetValue<string> {\n    constructor(value: string, location: Location) {\n        super(value, NodeType.IdentifierValue, location)\n    }\n}\n\nexport type NormalValue = NumberValue | BooleanValue | StringValue | NullValue | IdentifierValue\n\nexport type CompareOperator = '==' | '>=' | '<=' | '>' | '<' | '!='\nexport class CompareOperatorValue extends SleetValue<CompareOperator> {\n    constructor(value: CompareOperator, location: Location) {\n        super(value, NodeType.CompareOperator, location)\n    }\n}\n\n// at least one param\nexport class Transformer extends NamedNode {\n    private _params: NormalValue[]\n\n    constructor(name: string, params: NormalValue[], location: Location) {\n        super(name, NodeType.Transformer, location)\n        this._params = params || []\n    }\n\n    get params () {\n        return this._params\n    }\n\n    toHTMLString () {\n        return `${this.name}(${this._params.map(it => it.toHTMLString()).join(' ')})`\n    }\n}\n\nexport class TransformValue extends SleetValue<NormalValue> {\n    private _transformers: (Transformer | NormalValue)[]\n\n    constructor(value: NormalValue, transformers: (Transformer | NormalValue)[], location: Location) {\n        super(value, NodeType.TransformValue, location)\n        this._transformers = transformers || []\n    }\n\n    get transformers () {\n        return this._transformers\n    }\n\n    toHTMLString () {\n        return `${this._value.toHTMLString()}${this._transformers.map(it => ` | ` + it.toHTMLString()).join('')}`\n    }\n}\n\nexport type HelperValue = NormalValue | CompareOperatorValue | TransformValue\n\nexport class HelperAttribute extends NullableNamedNode {\n    private _value: HelperValue\n\n    constructor(name: string | undefined, value: HelperValue, location: Location) {\n        super(name, NodeType.HelperAttribute, location)\n        this._value = value\n    }\n\n    get value () {\n        return this._value\n    }\n\n    toHTMLString () {\n        return `${this.name ? this.name + '=' : ''}${this.value.toHTMLString()}`\n    }\n}\n\nexport class Helper extends NullableNamedNode {\n    private _attributes: HelperAttribute[]\n\n    constructor(name: string | undefined, attributes: HelperAttribute[], location: Location) {\n        super(name, NodeType.Helper, location)\n        this._attributes = attributes || []\n    }\n\n    get attributes () {\n        return this._attributes\n    }\n\n    toHTMLString () {\n        return `${this.name ? this.name : ''}(${this._attributes.map(it => it.toHTMLString()).join(' ')})`\n    }\n}\n\nexport class StaticText extends SleetValue<string> {\n    constructor(value: string, location: Location) {\n        super(value, NodeType.StaticText, location)\n    }\n\n    _merge (text: StaticText) {\n        const o = {start: this._location.start, end: text._location.end}\n        this._value += text._value\n        this._location = o\n    }\n\n    toHTMLString () {\n        return this.value\n    }\n}\n\nexport type DynamicTextValue = IdentifierValue | Helper\n\nexport class DynamicText extends SleetValue<DynamicTextValue> {\n    constructor(value: DynamicTextValue, location: Location) {\n        super(value, NodeType.DynamicText, location)\n    }\n\n    toHTMLString () {\n        return '$' + this.value.toHTMLString()\n    }\n}\n\nexport type SleetText = StaticText | DynamicText\nexport type SleetTextLine = SleetText[]\n\nexport type AttributeValue = NormalValue | Helper\n\nexport class Attribute extends NullableNamedNode {\n    private _values: AttributeValue[]\n    private _namespace?: string\n\n    constructor(ns: string | undefined, name: string | undefined, values: AttributeValue[], location: Location) {\n        super(name === null ? undefined : name, NodeType.Attribute, location)\n        this._values = values || []\n        this._namespace = ns === null ? undefined : ns\n    }\n\n    get values () {\n        return this._values\n    }\n\n    get namespace () {\n        return this._namespace\n    }\n\n    merge (other: Attribute) {\n        if (!this.name || this.name !== other.name || this.namespace !== other.namespace) return false\n        this._values = this._values.concat(other._values)\n        return true\n    }\n}\n\nexport class Setting extends NamedNode {\n    private _attributes: Attribute[]\n\n    constructor(name: string, attributes: Attribute[], location: Location) {\n        super(name, NodeType.Setting, location)\n        this._attributes = attributes || []\n    }\n\n    get attributes () {\n        return this._attributes\n    }\n}\n\nexport class AttributeGroup extends SleetNode {\n    private _setting?: Setting\n    private _attributes: Attribute[]\n\n    constructor(attributes: Attribute[], setting: Setting | undefined, location: Location) {\n        super(NodeType.AttributeGroup, location)\n        this._setting = setting\n        this._setAttributes(attributes || [])\n    }\n\n    get attributes () {\n        return this._attributes\n    }\n\n    get setting () {\n        return this._setting\n    }\n\n    _setAttributes (source: Attribute[]) {\n        let target = source\n        let idx = 0\n\n        while (idx < target.length) {\n            const current = target\n            target = []\n            current.forEach((it, i) => {\n                if (idx >= i) target.push(it)\n                else if (!current[idx].merge(it)) target.push(it)\n            })\n            idx ++\n        }\n        this._attributes = target\n    }\n\n    merge (other: AttributeGroup, ignoreSetting = false) {\n        if (!ignoreSetting && (other._setting || this._setting)) return false\n        const o = {start: this._location.start, end: other._location.end}\n        this._setAttributes(this._attributes.concat(other._attributes))\n        this._location = o\n        return true\n    }\n}\n\nexport type ExtraValue = NormalValue | CompareOperatorValue\n\nexport class TagExtra extends NamedNode {\n    private _values: ExtraValue[]\n\n    constructor(name: string, values: ExtraValue[], location: Location) {\n        super(name, NodeType.TagExtra, location)\n        this._values = values || []\n    }\n\n    get values () {\n        return this._values\n    }\n}\n\nexport class Tag extends NullableNamedNode {\n    private _namespace?: string\n    private _dots: string[]\n    private _hash?: string\n    private _indent: number\n\n    private _children: Tag[] = []\n    private _attributeGroups: AttributeGroup[]\n    private _extra?: TagExtra\n\n    private _parent?: Tag\n    private _text: SleetTextLine[] = []\n\n    constructor (\n        indent: number, name: string | undefined, ns: string, dots: string[], hash: string | undefined,\n        groups: AttributeGroup[], extra: TagExtra, location: Location\n    ) {\n        super(name, NodeType.Tag, location)\n        this._indent = indent\n        this._namespace = ns\n        this._dots = dots || []\n        this._hash = hash\n        this._extra = extra\n\n        this._setGroup(groups || [])\n    }\n\n    get indent () { return this._indent }\n    get dots () { return this._dots }\n    get hash () { return this._hash }\n    get namespace () { return this._namespace }\n    get children () { return this._children }\n    get attributeGroups () { return this._attributeGroups }\n    get extra () { return this._extra }\n    get parent () { return this._parent }\n    get text () { return this._text }\n\n    _setChildren (children: Tag[]) {\n        this._children = children\n    }\n\n    _setText (text: SleetTextLine[]) {\n        this._text = (text || []).map(it => it.reduce((acc, item) => {\n            if (!acc.length) return [item]\n            if (item.type === NodeType.DynamicText) return acc.concat(item)\n            const last = acc[acc.length - 1]\n            if (item.type === NodeType.StaticText && last.type === NodeType.StaticText) {\n                (last as StaticText)._merge(item as StaticText)\n                return acc\n            }\n\n            return acc.concat(item)\n        }, [] as SleetText[]))\n    }\n\n    private _setGroup (groups: AttributeGroup[]) {\n        this._attributeGroups = groups.reduce((acc, item) => {\n            if (!acc.length) return [item]\n            if (acc[acc.length - 1].merge(item)) return acc\n            return acc.concat(item)\n        }, [] as AttributeGroup[])\n    }\n}\n\nexport class Declaration extends NamedNode {\n    private _options: {[key: string]: string} = {}\n    private _extension: string\n\n    constructor (name: string, ext: string, pair: {key: string, value: string}[], location: Location) {\n        super(name, NodeType.Declaration, location)\n        this._extension = ext\n        pair.forEach(it => this._options[it.key] = it.value)\n    }\n\n    get extension () {\n        return this._extension\n    }\n\n    option (key: string) {\n        return this._options[key]\n    }\n}\n","import { CompileResult } from '../sleet'\nimport * as parser from './syntax'\nimport * as ast from '../ast'\n\nexport function parse(input: string): CompileResult {\n    return parser.parse(input, {ast})\n}\n","import { SleetNode } from './ast'\nimport { SleetOptions, CompilerFactory, Compiler } from './sleet'\n\nexport class Context {\n    private _options: SleetOptions\n    private _note: {[name: string]: any}\n\n    private _indent: number\n    private _haveIndent: boolean\n    private _indentToken: string\n    private _newLineToken: string\n\n    private _parent?: Context\n    private _result: string[] = []\n    private _factories: {[type: number]: CompilerFactory[]}\n\n    constructor (\n        options: SleetOptions, indent: number = -1, indentToken: string,\n        newLineToken = '\\n', parent?: Context, factories: {[type: number]: CompilerFactory[]} = {}, note: object = {}\n    ) {\n        this._options = options\n        this._indent = indent\n        this._indentToken = indentToken || '    '\n        this._newLineToken = newLineToken\n\n        this._parent = parent\n        this._factories = factories\n        this._note = note\n    }\n\n    get options (): SleetOptions {\n        return this._options\n    }\n\n    get note (): {[name: string]: any} {\n        return this._note\n    }\n\n    get haveIndent () {\n        return this._haveIndent\n    }\n\n    register (...factory: CompilerFactory[]) {\n        factory.forEach(it => {\n            if (!this._factories[it.type]) this._factories[it.type] = []\n            this._factories[it.type].unshift(it)\n        })\n    }\n\n    remove (factory: CompilerFactory) {\n        if (!this._factories[factory.type]) return\n        this._factories[factory.type] = this._factories[factory.type].filter(it => it !== factory)\n    }\n\n    replace (from: CompilerFactory, to: CompilerFactory) {\n        if (from.type !== to.type || !this._factories[from.type]) return\n        const idx = this._factories[from.type].indexOf(from)\n        if (idx === -1) return\n        this._factories[from.type][idx] = to\n    }\n\n    create (node: SleetNode, stack: SleetNode[]): Compiler | undefined {\n        const factory = this._factories[node.type]\n        if (!factory) return\n        let c: Compiler | undefined\n        let idx = 0\n\n        while (!c && idx < factory.length) {\n            c = factory[idx].create(node, stack)\n            idx ++\n        }\n\n        return c\n    }\n\n    _setHaveIndent (have: boolean) {\n        if (!this._parent) return\n        this._parent._haveIndent = have\n        this._parent._setHaveIndent(have)\n    }\n\n    indent (delta = 0) {\n        if (!this.haveContent()) return this\n        let idt = ''\n\n        for (let i = 0; i < this._indent + delta; i ++) {\n            idt += this._indentToken\n        }\n        this._result.push(idt)\n        this._setHaveIndent(true)\n        return this\n    }\n\n    mergeUp () {\n        if (this._parent) this._parent._result = this._parent._result.concat(this._result)\n    }\n\n    push (text: string) {\n        this._result.push(text)\n        return this\n    }\n\n    pop () {\n        this._result.pop()\n        return this\n    }\n\n    eol () {\n        if (!this.haveContent()) return this\n        this._result.push(this._newLineToken)\n        return this\n    }\n\n    sub (idt = 0) {\n        return new Context(\n            this._options, idt + this._indent + 1, this._indentToken,\n            this._newLineToken, this, this._factories, this._note\n        )\n    }\n\n    haveContent (): boolean {\n        return (this._parent && this._parent.haveContent()) || this._result.length !== 0\n    }\n\n    getOutput () {\n        if (!this._parent) {\n            if (this._result.slice(-1)[0] !== this._newLineToken) this.eol()\n        }\n        return this._result.join('')\n    }\n\n    compile (node: SleetNode, stack: SleetNode[], indent = 0) {\n        const compiler = this.create(node, stack)\n        if (!compiler) return null\n\n        const sub = this.sub(indent)\n        compiler.compile(sub)\n        return sub\n    }\n}\n","import { parse } from './parser'\nimport { Context } from './context'\nimport { NodeType, SleetNode, Declaration, Tag } from './ast'\n\nexport * from './ast'\nexport { Context, parse }\n\nexport interface SleetOutput {\n    code: string\n    mapping?: string\n    extension?: string\n}\n\nexport interface Location {\n    start: {offset: number, line: number, column: number}\n    end: {offset: number, line: number, column: number}\n}\n\nexport interface Compiler {\n    compile (context: Context): void\n}\n\nexport interface CompilerFactory {\n    type: NodeType\n    new (...args: any[]): Compiler\n    create (node: SleetNode, stack: SleetNode[]): Compiler | undefined\n}\n\nexport interface CompileResult {\n    nodes: Tag[]\n    indent: string\n    declaration: Declaration\n}\n\nexport interface SleetPlugin {\n    prepare? (context: Context): void\n    compile (input: CompileResult, options: SleetOptions, context: Context): SleetOutput\n}\n\nexport interface SleetOptions {\n    plugins?: {[name: string]: SleetPlugin}\n    defaultPlugin?: string | SleetPlugin\n    pluginOptions?: {[name: string]: any}\n    sourceFile?: string\n    newLineToken?: string\n    compile? (input: CompileResult, options: SleetOptions): SleetOutput\n}\n\nexport function compile(input: string, options: SleetOptions): SleetOutput {\n    const result = parse(input)\n    if (options.compile) {\n        return options.compile(result, options)\n    }\n\n    let name: string | SleetPlugin = ''\n    if (result.declaration) {\n        name = result.declaration.name\n    }\n\n    if (!name && options.defaultPlugin) name = options.defaultPlugin\n    if (name && typeof name === 'string' && options.plugins && options.plugins[name]) {\n        name = options.plugins[name]\n    }\n\n    if (!name) name = 'html'\n    if (name && typeof name === 'string') {\n        if (name.slice(0, 6) === 'sleet-') name = name.slice(6)\n        const o = require(name)\n        name = o.plugin\n    }\n\n    const context = new Context(options, 0, result.indent, options.newLineToken || '\\n')\n    const plugin = name as SleetPlugin\n    if (plugin.prepare) plugin.prepare(context)\n    return plugin.compile(result, options, context)\n}\n"],"names":["peg$subclass","child","parent","ctor","constructor","prototype","peg$SyntaxError","message","expected","found","location","name","Error","captureStackTrace","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","literalEscape","text","escapedParts","i","parts","length","Array","classEscape","inverted","any","end","other","description","hex","ch","charCodeAt","toString","toUpperCase","s","replace","describeExpectation","type","describeExpected","descriptions","j","sort","slice","join","describeFound","peg$parse","input","options","peg$FAILED","peg$startRuleFunctions","start","peg$parsestart","peg$startRuleFunction","peg$c0","declare","nodes","flatSibling","indent","IDT_TOK","declaration","peg$c1","peg$c2","peg$literalExpectation","peg$c3","peg$c4","peg$c5","peg$c6","ext","kv","peg$c7","attr","ast","Declaration","peg$c8","peg$anyExpectation","peg$c9","key","value","peg$c10","node","peg$c11","rest","unshift","peg$c12","p","c","cc","filter","it","sibling","_setChildren","parents","pop","peg$c13","tag","push","peg$c14","peg$c15","peg$c16","peg$c17","peg$classExpectation","peg$c18","_indent","peg$c19","peg$c20","peg$c21","peg$c22","_setText","Tag","IDT","peg$c23","peg$c24","peg$c25","ns","clazz","id","clazz2","peg$c26","attrs","extra","concat","peg$c27","peg$c28","peg$c29","peg$c30","peg$c31","peg$c32","peg$c33","peg$c34","peg$c35","peg$c36","peg$c37","peg$c38","peg$c39","peg$c40","values","TagExtra","peg$c41","peg$c42","peg$c43","first","v","peg$c44","peg$c45","peg$c46","peg$c47","peg$c48","peg$c49","textIndent","peg$c50","peg$c51","peg$c52","peg$c53","peg$c54","peg$c55","l","peg$c56","peg$c57","peg$otherExpectation","peg$c58","indexOf","peg$c59","sp","StaticText","peg$c60","w","peg$c61","ws","peg$c62","peg$c63","peg$c64","peg$c65","peg$c66","peg$c67","peg$c68","peg$c69","t","peg$c70","peg$c71","peg$c72","DynamicText","peg$c73","peg$c74","group","peg$c75","settings","AttributeGroup","peg$c76","peg$c77","peg$c78","al","peg$c79","reduce","acc","item","peg$c80","peg$c81","pairs","peg$c82","peg$c83","peg$c84","pair","peg$c85","peg$c86","Attribute","peg$c87","peg$c88","peg$c89","peg$c90","peg$c91","peg$c92","peg$c93","peg$c94","peg$c95","peg$c96","peg$c97","peg$c98","peg$c99","Setting","peg$c100","n","peg$c101","peg$c102","attributes","Helper","peg$c103","peg$c104","peg$c105","HelperAttribute","peg$c106","peg$c107","peg$c108","ts","TransformValue","peg$c109","peg$c110","Transformer","peg$c111","StringValue","peg$c112","NumberValue","peg$c113","b","BooleanValue","peg$c114","peg$c115","peg$c116","NullValue","peg$c117","IdentifierValue","peg$c118","peg$c119","peg$c120","peg$c121","peg$c122","peg$c123","peg$c124","peg$c125","peg$c126","peg$c127","peg$c128","peg$c129","peg$c130","peg$c131","peg$c132","peg$c133","peg$c134","CompareOperatorValue","peg$c135","peg$c136","peg$c137","peg$c138","peg$c139","peg$c140","peg$c141","peg$c142","peg$c143","peg$c144","peg$c145","peg$c146","peg$c147","peg$c148","peg$c149","peg$c150","peg$c151","peg$c152","peg$c153","peg$c154","peg$c155","peg$c156","peg$c157","peg$c158","peg$c159","spaces","peg$c160","peg$c161","tabs","peg$c162","peg$c163","peg$c164","peg$c165","peg$c166","chars","peg$c167","peg$c168","peg$c169","peg$c170","peg$c171","char","peg$c172","peg$c173","peg$c174","peg$c175","peg$c176","peg$c177","peg$c178","peg$c179","peg$c180","peg$c181","peg$c182","peg$c183","peg$c184","peg$c185","peg$c186","peg$c187","peg$c188","peg$c189","peg$c190","peg$c191","peg$c192","peg$c193","peg$c194","peg$c195","sign","peg$c196","peg$c197","peg$c198","peg$c199","peg$c200","parseInt","peg$c201","peg$c202","peg$c203","peg$c204","parseFloat","peg$c205","peg$c206","peg$c207","peg$c208","peg$currPos","peg$savedPos","peg$posDetailsCache","line","column","peg$maxFailPos","peg$maxFailExpected","peg$silentFails","peg$result","startRule","substring","peg$computeLocation","ignoreCase","peg$endExpectation","peg$computePosDetails","pos","details","startPos","endPos","startPosDetails","endPosDetails","offset","peg$fail","peg$buildStructuredError","s0","s1","s2","s3","s4","s5","s6","peg$parsedeclare_line","peg$parseblank_line","peg$parsenodes","peg$parse_","s7","s8","s9","s10","substr","peg$parseidentifier","peg$parsekey_value_pair","peg$parseeol","charAt","peg$parsenode","peg$parsenode_sep","peg$parsenode_parent","peg$parsenode_child","peg$parsetag_body","peg$parsenode_indent","test","peg$parsetag_text","peg$parseidt","peg$parsenamespace","peg$parsetag_class","peg$parsetag_id","peg$parseattr_groups","peg$parsetag_extra","peg$parseextra_values","peg$parseextra_value","peg$parsenormal_value","peg$parsecompare_value","peg$parsetag_text_lines","peg$parsetext_to_end","peg$parsettl","peg$parsestatic_text","peg$parsedynamic_text","peg$parseplain_text","peg$parseidentifier_value","peg$parsehelper","peg$parseattr_group","peg$parseattr_pairs","peg$parseattr_settings","peg$parseattr_lines","peg$parseattr_line","peg$parseattr_pair","peg$parseattr_values","peg$parseattr_value","peg$parsehelper_attrs","peg$parsehelper_attr","peg$parsehelper_value","peg$parsetransform","peg$parsetransformer","peg$parsestring_value","peg$parsequoted_string","peg$parsenumber_value","peg$parsenumber","peg$parseboolean_value","peg$parseboolean","peg$parsenull_value","peg$parsedot_identifier","peg$parsepath_identifier_value","peg$parsedqs","peg$parsesqs","peg$parseec","peg$parsenumber_def","toLowerCase","peg$parseint","peg$parseexponent","last","SyntaxError","parse","NodeType","SleetNode","_type","_location","NamedParentNode","_name","NamedNode","NullableNamedNode","SleetValue","_value","CompareOperator","params","_params","map","toHTMLString","transformers","_transformers","_attributes","o","undefined","_values","_namespace","namespace","setting","_setting","_setAttributes","source","target","idx","current","forEach","merge","ignoreSetting","dots","hash","groups","_dots","_hash","_extra","_setGroup","children","_children","_text","_merge","_attributeGroups","_parent","_extension","_options","parser","Context","indentToken","newLineToken","factories","note","_indentToken","_newLineToken","_factories","_note","factory","from","to","stack","create","have","_haveIndent","_setHaveIndent","delta","haveContent","idt","_result","eol","compiler","sub","compile","result","defaultPlugin","plugins","require","plugin","context","prepare"],"mappings":"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"}